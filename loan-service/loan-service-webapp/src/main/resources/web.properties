## EMBEDDED SERVER CONFIGURATION (ServerProperties)
#server.compression.enabled=true
#server.connection-timeout=5000 # This will depend on the consumption of the application, but higher values might produce a deadly level of I/O
#server.context-path=odin
#server.display-name=odin
#server.port=8080
#server.server-header=odin
#server.use-forward-headers=true
#
## HTTP message conversion
#spring.http.converters.preferred-json-mapper=jackson
#
## HTTP encoding (HttpEncodingProperties)
#spring.http.encoding.charset=UTF-8
#spring.http.encoding.enabled=true
#
## ENDPOINTS (AbstractEndpoint subclasses)
#endpoints.enabled=true # Enable endpoints.
#endpoints.sensitive= # Default endpoint sensitive setting.
#endpoints.actuator.enabled=true # Enable the endpoint.
#endpoints.actuator.path= # Endpoint URL path.
#endpoints.actuator.sensitive=false # Enable security on the endpoint.
#endpoints.autoconfig.enabled= # Enable the endpoint.
#endpoints.autoconfig.id= # Endpoint identifier.
#endpoints.autoconfig.path= # Endpoint path.
#endpoints.autoconfig.sensitive= # Mark if the endpoint exposes sensitive information.
#endpoints.beans.enabled= # Enable the endpoint.
#endpoints.beans.id= # Endpoint identifier.
#endpoints.beans.path= # Endpoint path.
#endpoints.beans.sensitive= # Mark if the endpoint exposes sensitive information.
#endpoints.configprops.enabled= # Enable the endpoint.
#endpoints.configprops.id= # Endpoint identifier.
#endpoints.configprops.keys-to-sanitize=password,secret,key,token,.*credentials.*,vcap_services # Keys that should be sanitized. Keys can be simple strings that the property ends with or regex expressions.
#endpoints.configprops.path= # Endpoint path.
#endpoints.configprops.sensitive= # Mark if the endpoint exposes sensitive information.
#endpoints.docs.curies.enabled=false # Enable the curie generation.
#endpoints.docs.enabled=true # Enable actuator docs endpoint.
#endpoints.docs.path=/docs #
#endpoints.docs.sensitive=false #
#endpoints.dump.enabled= # Enable the endpoint.
#endpoints.dump.id= # Endpoint identifier.
#endpoints.dump.path= # Endpoint path.
#endpoints.dump.sensitive= # Mark if the endpoint exposes sensitive information.
#endpoints.env.enabled= # Enable the endpoint.
#endpoints.env.id= # Endpoint identifier.
#endpoints.env.keys-to-sanitize=password,secret,key,token,.*credentials.*,vcap_services # Keys that should be sanitized. Keys can be simple strings that the property ends with or regex expressions.
#endpoints.env.path= # Endpoint path.
#endpoints.env.sensitive= # Mark if the endpoint exposes sensitive information.
#endpoints.flyway.enabled= # Enable the endpoint.
#endpoints.flyway.id= # Endpoint identifier.
#endpoints.flyway.sensitive= # Mark if the endpoint exposes sensitive information.
#endpoints.health.enabled= # Enable the endpoint.
#endpoints.health.id= # Endpoint identifier.
#endpoints.health.mapping.*= # Mapping of health statuses to HttpStatus codes. By default, registered health statuses map to sensible defaults (i.e. UP maps to 200).
#endpoints.health.path= # Endpoint path.
#endpoints.health.sensitive= # Mark if the endpoint exposes sensitive information.
#endpoints.health.time-to-live=1000 # Time to live for cached result, in milliseconds.
#endpoints.heapdump.enabled= # Enable the endpoint.
#endpoints.heapdump.path= # Endpoint path.
#endpoints.heapdump.sensitive= # Mark if the endpoint exposes sensitive information.
#endpoints.info.enabled= # Enable the endpoint.
#endpoints.info.id= # Endpoint identifier.
#endpoints.info.path= # Endpoint path.
#endpoints.info.sensitive= # Mark if the endpoint exposes sensitive information.
#endpoints.jolokia.enabled=true # Enable Jolokia endpoint.
#endpoints.jolokia.path=/jolokia # Endpoint URL path.
#endpoints.jolokia.sensitive=true # Enable security on the endpoint.
#endpoints.liquibase.enabled= # Enable the endpoint.
#endpoints.liquibase.id= # Endpoint identifier.
#endpoints.liquibase.sensitive= # Mark if the endpoint exposes sensitive information.
#endpoints.logfile.enabled=true # Enable the endpoint.
#endpoints.logfile.external-file= # External Logfile to be accessed.
#endpoints.logfile.path=/logfile # Endpoint URL path.
#endpoints.logfile.sensitive=true # Enable security on the endpoint.
#endpoints.mappings.enabled= # Enable the endpoint.
#endpoints.mappings.id= # Endpoint identifier.
#endpoints.mappings.path= # Endpoint path.
#endpoints.mappings.sensitive= # Mark if the endpoint exposes sensitive information.
#endpoints.metrics.enabled= # Enable the endpoint.
#endpoints.metrics.filter.enabled=true # Enable the metrics servlet filter.
#endpoints.metrics.filter.gauge-submissions=merged # Http filter gauge submissions (merged, per-http-method)
#endpoints.metrics.filter.counter-submissions=merged # Http filter counter submissions (merged, per-http-method)
#endpoints.metrics.id= # Endpoint identifier.
#endpoints.metrics.path= # Endpoint path.
#endpoints.metrics.sensitive= # Mark if the endpoint exposes sensitive information.
#endpoints.shutdown.enabled= # Enable the endpoint.
#endpoints.shutdown.id= # Endpoint identifier.
#endpoints.shutdown.path= # Endpoint path.
#endpoints.shutdown.sensitive= # Mark if the endpoint exposes sensitive information.
#endpoints.trace.enabled= # Enable the endpoint.
#endpoints.trace.id= # Endpoint identifier.
#endpoints.trace.path= # Endpoint path.
#endpoints.trace.sensitive= # Mark if the endpoint exposes sensitive information.
#
## ENDPOINTS CORS CONFIGURATION (EndpointCorsProperties)
#endpoints.cors.allow-credentials= # Set whether credentials are supported. When not set, credentials are not supported.
#endpoints.cors.allowed-headers= # Comma-separated list of headers to allow in a request. '*' allows all headers.
#endpoints.cors.allowed-methods=GET # Comma-separated list of methods to allow. '*' allows all methods.
#endpoints.cors.allowed-origins= # Comma-separated list of origins to allow. '*' allows all origins. When not set, CORS support is disabled.
#endpoints.cors.exposed-headers= # Comma-separated list of headers to include in a response.
#endpoints.cors.max-age=1800 # How long, in seconds, the response from a pre-flight request can be cached by clients.
#
## JMX ENDPOINT (EndpointMBeanExportProperties)
#endpoints.jmx.domain= # JMX domain name. Initialized with the value of 'spring.jmx.default-domain' if set.
#endpoints.jmx.enabled=true # Enable JMX export of all endpoints.
#endpoints.jmx.static-names= # Additional static properties to append to all ObjectNames of MBeans representing Endpoints.
#endpoints.jmx.unique-names=false # Ensure that ObjectNames are modified in case of conflict.
#
## JOLOKIA (JolokiaProperties)
#jolokia.config.*= # See Jolokia manual
#
## MANAGEMENT HTTP SERVER (ManagementServerProperties)
#management.add-application-context-header=true # Add the "X-Application-Context" HTTP header in each response.
#management.address= # Network address that the management endpoints should bind to.
#management.context-path= # Management endpoint context-path. For instance `/actuator`
#management.port= # Management endpoint HTTP port. Uses the same port as the application by default. Configure a different port to use management-specific SSL.
#management.security.enabled=true # Enable security.
#management.security.roles=ADMIN # Comma-separated list of roles that can access the management endpoint.
#management.security.sessions=stateless # Session creating policy to use (always, never, if_required, stateless).
#management.ssl.ciphers= # Supported SSL ciphers. Requires a custom management.port.
#management.ssl.client-auth= # Whether client authentication is wanted ("want") or needed ("need"). Requires a trust store. Requires a custom management.port.
#management.ssl.enabled= # Enable SSL support. Requires a custom management.port.
#management.ssl.enabled-protocols= # Enabled SSL protocols. Requires a custom management.port.
#management.ssl.key-alias= # Alias that identifies the key in the key store. Requires a custom management.port.
#management.ssl.key-password= # Password used to access the key in the key store. Requires a custom management.port.
#management.ssl.key-store= # Path to the key store that holds the SSL certificate (typically a jks file). Requires a custom management.port.
#management.ssl.key-store-password= # Password used to access the key store. Requires a custom management.port.
#management.ssl.key-store-provider= # Provider for the key store. Requires a custom management.port.
#management.ssl.key-store-type= # Type of the key store. Requires a custom management.port.
#management.ssl.protocol=TLS # SSL protocol to use. Requires a custom management.port.
#management.ssl.trust-store= # Trust store that holds SSL certificates. Requires a custom management.port.
#management.ssl.trust-store-password= # Password used to access the trust store. Requires a custom management.port.
#management.ssl.trust-store-provider= # Provider for the trust store. Requires a custom management.port.
#management.ssl.trust-store-type= # Type of the trust store. Requires a custom management.port.
#
## HEALTH INDICATORS (previously health.*)
#management.health.db.enabled=true # Enable database health check.
#management.health.defaults.enabled=true # Enable default health indicators.
#management.health.diskspace.enabled=true # Enable disk space health check.
#management.health.diskspace.path= # Path used to compute the available disk space.
#management.health.diskspace.threshold=0 # Minimum disk space that should be available, in bytes.
#management.health.elasticsearch.enabled=true # Enable elasticsearch health check.
#management.health.elasticsearch.indices= # Comma-separated index names.
#management.health.elasticsearch.response-timeout=100 # The time, in milliseconds, to wait for a response from the cluster.
#management.health.jms.enabled=true # Enable JMS health check.
#management.health.mail.enabled=true # Enable Mail health check.
#management.health.mongo.enabled=true # Enable MongoDB health check.
#management.health.rabbit.enabled=true # Enable RabbitMQ health check.
#management.health.redis.enabled=true # Enable Redis health check.
#management.health.solr.enabled=true # Enable Solr health check.
#management.health.status.order=DOWN, OUT_OF_SERVICE, UNKNOWN, UP # Comma-separated list of health statuses in order of severity.
#
## INFO CONTRIBUTORS (InfoContributorProperties)
#management.info.build.enabled=true # Enable build info.
#management.info.defaults.enabled=true # Enable default info contributors.
#management.info.env.enabled=true # Enable environment info.
#management.info.git.enabled=true # Enable git info.
#management.info.git.mode=simple # Mode to use to expose git information.
#
## REMOTE SHELL (ShellProperties)
#management.shell.auth.type=simple # Authentication type. Auto-detected according to the environment.
#management.shell.auth.jaas.domain=my-domain # JAAS domain.
#management.shell.auth.key.path= # Path to the authentication key. This should point to a valid ".pem" file.
#management.shell.auth.simple.user.name=user # Login user.
#management.shell.auth.simple.user.password= # Login password.
#management.shell.auth.spring.roles=ADMIN # Comma-separated list of required roles to login to the CRaSH console.
#management.shell.command-path-patterns=classpath*:/commands/**,classpath*:/crash/commands/** # Patterns to use to look for commands.
#management.shell.command-refresh-interval=-1 # Scan for changes and update the command if necessary (in seconds).
#management.shell.config-path-patterns=classpath*:/crash/* # Patterns to use to look for configurations.
#management.shell.disabled-commands=jpa*,jdbc*,jndi* # Comma-separated list of commands to disable.
#management.shell.disabled-plugins= # Comma-separated list of plugins to disable. Certain plugins are disabled by default based on the environment.
#management.shell.ssh.auth-timeout = # Number of milliseconds after user will be prompted to login again.
#management.shell.ssh.enabled=true # Enable CRaSH SSH support.
#management.shell.ssh.idle-timeout = # Number of milliseconds after which unused connections are closed.
#management.shell.ssh.key-path= # Path to the SSH server key.
#management.shell.ssh.port=2000 # SSH port.
#management.shell.telnet.enabled=false # Enable CRaSH telnet support. Enabled by default if the TelnetPlugin is  available.
#management.shell.telnet.port=5000 # Telnet port.
#
## TRACING (TraceProperties)
#management.trace.include=request-headers,response-headers,cookies,errors # Items to be included in the trace.
#
## METRICS EXPORT (MetricExportProperties)
#spring.metrics.export.aggregate.key-pattern= # Pattern that tells the aggregator what to do with the keys from the source repository.
#spring.metrics.export.aggregate.prefix= # Prefix for global repository if active.
#spring.metrics.export.delay-millis=5000 # Delay in milliseconds between export ticks. Metrics are exported to external sources on a schedule with this delay.
#spring.metrics.export.enabled=true # Flag to enable metric export (assuming a MetricWriter is available).
#spring.metrics.export.excludes= # List of patterns for metric names to exclude. Applied after the includes.
#spring.metrics.export.includes= # List of patterns for metric names to include.
#spring.metrics.export.redis.key=keys.spring.metrics # Key for redis repository export (if active).
#spring.metrics.export.redis.prefix=spring.metrics # Prefix for redis repository if active.
#spring.metrics.export.send-latest= # Flag to switch off any available optimizations based on not exporting unchanged metric values.
#spring.metrics.export.statsd.host= # Host of a statsd server to receive exported metrics.
#spring.metrics.export.statsd.port=8125 # Port of a statsd server to receive exported metrics.
#spring.metrics.export.statsd.prefix= # Prefix for statsd exported metrics.
#spring.metrics.export.triggers.*= # Specific trigger properties per MetricWriter bean name.
